<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0 (Python 3.7.0 on win32)" generated="20220429 13:58:05.216" rpa="false" schemaversion="3">
<suite id="s1" name="demoProjects" source="D:\demoProjects">
<suite id="s1-s1" name="Testcases" source="D:\demoProjects\testcases">
<suite id="s1-s1-s1" name="GUI scripts" source="D:\demoProjects\testcases\GUI_scripts.robot">
<test id="s1-s1-s1-t1" name="app_switch_multiBrowser" line="100">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>https://demoqa.com/browser-windows</arg>
<arg>gc</arg>
<arg>alias=first_window</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220429 13:58:05.811" level="INFO">Opening browser 'gc' to base url 'https://demoqa.com/browser-windows'.</msg>
<status status="PASS" starttime="20220429 13:58:05.811" endtime="20220429 13:58:22.911"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220429 13:58:22.911" endtime="20220429 13:58:23.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>1st window open</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:23.042" level="INFO">1st window open</msg>
<status status="PASS" starttime="20220429 13:58:23.042" endtime="20220429 13:58:23.042"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>${window_handles}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20220429 13:58:23.050" level="INFO">${window_handles} = ['CDwindow-E07A35F864C1088560485D44017A9A43']</msg>
<status status="PASS" starttime="20220429 13:58:23.042" endtime="20220429 13:58:23.050"/>
</kw>
<for flavor="IN">
<var>${window}</var>
<value>${window_handles}</value>
<iter>
<var name="${window}">['CDwindow-E07A35F864C1088560485D44017A9A43']</var>
<kw name="Log" library="BuiltIn">
<arg>${window}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:23.050" level="INFO">['CDwindow-E07A35F864C1088560485D44017A9A43']</msg>
<status status="PASS" starttime="20220429 13:58:23.050" endtime="20220429 13:58:23.050"/>
</kw>
<status status="PASS" starttime="20220429 13:58:23.050" endtime="20220429 13:58:23.050"/>
</iter>
<status status="PASS" starttime="20220429 13:58:23.050" endtime="20220429 13:58:23.050"/>
</for>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220429 13:58:25.060" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20220429 13:58:23.050" endtime="20220429 13:58:25.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>2nd window open</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:25.060" level="INFO">2nd window open</msg>
<status status="PASS" starttime="20220429 13:58:25.060" endtime="20220429 13:58:25.060"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>https://google.com</arg>
<arg>gc</arg>
<arg>alias=second_window</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220429 13:58:25.060" level="INFO">Opening browser 'gc' to base url 'https://google.com'.</msg>
<status status="PASS" starttime="20220429 13:58:25.060" endtime="20220429 13:58:28.526"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220429 13:58:28.526" endtime="20220429 13:58:28.675"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>${window_handles}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20220429 13:58:28.676" level="INFO">${window_handles} = ['CDwindow-57D84B82DAD1C0C89DB2596C9CA77D9C']</msg>
<status status="PASS" starttime="20220429 13:58:28.676" endtime="20220429 13:58:28.676"/>
</kw>
<for flavor="IN">
<var>${window}</var>
<value>${window_handles}</value>
<iter>
<var name="${window}">['CDwindow-57D84B82DAD1C0C89DB2596C9CA77D9C']</var>
<kw name="Log" library="BuiltIn">
<arg>${window}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:28.676" level="INFO">['CDwindow-57D84B82DAD1C0C89DB2596C9CA77D9C']</msg>
<status status="PASS" starttime="20220429 13:58:28.676" endtime="20220429 13:58:28.676"/>
</kw>
<status status="PASS" starttime="20220429 13:58:28.676" endtime="20220429 13:58:28.676"/>
</iter>
<status status="PASS" starttime="20220429 13:58:28.676" endtime="20220429 13:58:28.676"/>
</for>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220429 13:58:30.693" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20220429 13:58:28.676" endtime="20220429 13:58:30.693"/>
</kw>
<kw name="Switch Browser" library="SeleniumLibrary">
<arg>1</arg>
<doc>Switches between active browsers using ``index_or_alias``.</doc>
<status status="PASS" starttime="20220429 13:58:30.693" endtime="20220429 13:58:30.693"/>
</kw>
<kw name="Get Title" library="SeleniumLibrary">
<var>${window_1}</var>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20220429 13:58:30.733" level="INFO">${window_1} = ToolsQA</msg>
<status status="PASS" starttime="20220429 13:58:30.693" endtime="20220429 13:58:30.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${window_1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:30.733" level="INFO">ToolsQA</msg>
<status status="PASS" starttime="20220429 13:58:30.733" endtime="20220429 13:58:30.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>switched to 1st window</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:30.741" level="INFO">switched to 1st window</msg>
<status status="PASS" starttime="20220429 13:58:30.741" endtime="20220429 13:58:30.741"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>${window_handles}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20220429 13:58:30.741" level="INFO">${window_handles} = ['CDwindow-E07A35F864C1088560485D44017A9A43']</msg>
<status status="PASS" starttime="20220429 13:58:30.741" endtime="20220429 13:58:30.741"/>
</kw>
<for flavor="IN">
<var>${window}</var>
<value>${window_handles}</value>
<iter>
<var name="${window}">['CDwindow-E07A35F864C1088560485D44017A9A43']</var>
<kw name="Log" library="BuiltIn">
<arg>${window}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:30.749" level="INFO">['CDwindow-E07A35F864C1088560485D44017A9A43']</msg>
<status status="PASS" starttime="20220429 13:58:30.749" endtime="20220429 13:58:30.749"/>
</kw>
<status status="PASS" starttime="20220429 13:58:30.749" endtime="20220429 13:58:30.749"/>
</iter>
<status status="PASS" starttime="20220429 13:58:30.741" endtime="20220429 13:58:30.749"/>
</for>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220429 13:58:32.751" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20220429 13:58:30.749" endtime="20220429 13:58:32.751"/>
</kw>
<kw name="Switch Browser" library="SeleniumLibrary">
<arg>2</arg>
<doc>Switches between active browsers using ``index_or_alias``.</doc>
<status status="PASS" starttime="20220429 13:58:32.751" endtime="20220429 13:58:32.751"/>
</kw>
<kw name="Get Title" library="SeleniumLibrary">
<var>${window_2}</var>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20220429 13:58:32.759" level="INFO">${window_2} = Google</msg>
<status status="PASS" starttime="20220429 13:58:32.751" endtime="20220429 13:58:32.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>switched to 2nd window</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:32.759" level="INFO">switched to 2nd window</msg>
<status status="PASS" starttime="20220429 13:58:32.759" endtime="20220429 13:58:32.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${window_2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:32.759" level="INFO">Google</msg>
<status status="PASS" starttime="20220429 13:58:32.759" endtime="20220429 13:58:32.759"/>
</kw>
<kw name="Get Window Handles" library="SeleniumLibrary">
<var>${window_handles}</var>
<doc>Returns all child window handles of the selected browser as a list.</doc>
<msg timestamp="20220429 13:58:32.759" level="INFO">${window_handles} = ['CDwindow-57D84B82DAD1C0C89DB2596C9CA77D9C']</msg>
<status status="PASS" starttime="20220429 13:58:32.759" endtime="20220429 13:58:32.759"/>
</kw>
<for flavor="IN">
<var>${window}</var>
<value>${window_handles}</value>
<iter>
<var name="${window}">['CDwindow-57D84B82DAD1C0C89DB2596C9CA77D9C']</var>
<kw name="Log" library="BuiltIn">
<arg>${window}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220429 13:58:32.767" level="INFO">['CDwindow-57D84B82DAD1C0C89DB2596C9CA77D9C']</msg>
<status status="PASS" starttime="20220429 13:58:32.767" endtime="20220429 13:58:32.767"/>
</kw>
<status status="PASS" starttime="20220429 13:58:32.767" endtime="20220429 13:58:32.767"/>
</iter>
<status status="PASS" starttime="20220429 13:58:32.759" endtime="20220429 13:58:32.767"/>
</for>
<status status="PASS" starttime="20220429 13:58:05.811" endtime="20220429 13:58:32.767"/>
</test>
<status status="PASS" starttime="20220429 13:58:05.795" endtime="20220429 13:58:32.767"/>
</suite>
<status status="PASS" starttime="20220429 13:58:05.311" endtime="20220429 13:58:32.767"/>
</suite>
<status status="PASS" starttime="20220429 13:58:05.263" endtime="20220429 13:58:32.775"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="demoProjects">demoProjects</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Testcases">demoProjects.Testcases</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="GUI scripts">demoProjects.Testcases.GUI scripts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
